#!/bin/bash

# This script should be executed on the LXC container after provisioning
# Usage: Copy to the container and run with bash

set -e
echo "Starting GitLab installation script..."

# 1. Update system and install prerequisites
apt-get update && apt-get upgrade -y
apt-get install -y curl openssh-server ca-certificates apt-transport-https gnupg lsb-release

# 2. Create directories for certificates
echo "Setting up directories for certificates..."
mkdir -p /etc/gitlab/ssl

# 3. Generate self-signed certificate
echo "Generating self-signed certificate..."
cat > /tmp/gitlab.<DOMAIN>.cnf << EOF
[ req ]
default_bits       = 2048
distinguished_name = req_distinguished_name
req_extensions     = req_ext
prompt             = no
[ req_distinguished_name ]
countryName                = <COUNTRY_CODE>
stateOrProvinceName        = <STATE>
localityName               = <LOCALITY>
organizationName           = <ORGANIZATION>
commonName                 = gitlab.<DOMAIN>
[ req_ext ]
subjectAltName = @alt_names
[alt_names]
DNS.1  = gitlab.<DOMAIN>
EOF

openssl genpkey -out /etc/gitlab/ssl/gitlab.<DOMAIN>.key -algorithm RSA -pkeyopt rsa_keygen_bits:2048
openssl req -new -key /etc/gitlab/ssl/gitlab.<DOMAIN>.key -out /tmp/gitlab.<DOMAIN>.csr -config /tmp/gitlab.<DOMAIN>.cnf
openssl x509 -signkey /etc/gitlab/ssl/gitlab.<DOMAIN>.key -in /tmp/gitlab.<DOMAIN>.csr -req -copy_extensions copyall -days 365 -out /etc/gitlab/ssl/gitlab.<DOMAIN>.crt

echo "Installing certificate on Debian/Ubuntu system..."
cp /etc/gitlab/ssl/gitlab.<DOMAIN>.crt /usr/local/share/ca-certificates/gitlab.<DOMAIN>.crt
update-ca-certificates

# 4. Install GitLab CE package
echo "Installing GitLab CE repository..."
curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash

# Set external URL - replace with actual domain if available
GITLAB_DOMAIN="${GITLAB_DOMAIN:-localhost}"
GITLAB_EXTERNAL_URL="http://$GITLAB_DOMAIN"

echo "Installing GitLab CE package with HTTP configuration..."
EXTERNAL_URL="http://gitlab.<DOMAIN>" apt-get install -y gitlab-ce

# 5. Configure HTTPS
echo "Configuring HTTPS for GitLab..."
cat > /etc/gitlab/gitlab.rb << EOF
external_url 'https://gitlab.<DOMAIN>'
nginx['redirect_http_to_https'] = true
nginx['ssl_certificate'] = "/etc/gitlab/ssl/gitlab.<DOMAIN>.crt"
nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/gitlab.<DOMAIN>.key"

# Registry settings
registry_external_url 'https://gitlab.<DOMAIN>:<REGISTRY_PORT>'
registry_nginx['ssl_certificate'] = "/etc/gitlab/ssl/gitlab.<DOMAIN>.crt"
registry_nginx['ssl_certificate_key'] = "/etc/gitlab/ssl/gitlab.<DOMAIN>.key"
EOF

# 6. Reconfigure GitLab
echo "Reconfiguring GitLab with new settings..."
gitlab-ctl reconfigure

# 7. Install Docker
echo "Installing Docker..."
curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh

# 8. Install cert for registry
mkdir -p /etc/docker/certs.d/gitlab.<DOMAIN>:<REGISTRY_PORT>
cp /etc/gitlab/ssl/gitlab.<DOMAIN>.crt /etc/docker/certs.d/gitlab.<DOMAIN>:<REGISTRY_PORT>/ca.crt
systemctl restart docker

# 9. Install gitlab-runner
echo "Installing gitlab-runner..."
curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh" | bash
apt-get install gitlab-runner -y

# 10. Install and Configure BIND9 DNS Server
echo "Installing BIND9 DNS Server..."
apt-get install -y bind9 bind9utils bind9-doc
# Configure BIND9 options
cat > /etc/bind/named.conf.options << EOF
options {
    directory "/var/cache/bind";
    
    forwarders {
        <DNS_FORWARDER_1>;
        <DNS_FORWARDER_2>;
        <DNS_FORWARDER_3>;
    };

    allow-query { any; };

    recursion yes;
    dnssec-validation no;
    listen-on { any; };
};
EOF

# Configure zones
cat > /etc/bind/named.conf.local << EOF
zone "<DOMAIN>" {
    type master;
    file "/etc/bind/zones/db.<DOMAIN>";
};

zone "<REVERSE_ZONE_1>" {
    type master;
    file "/etc/bind/zones/db.<REVERSE_FILE_1>";
};

zone "<REVERSE_ZONE_2>" {
    type master;
    file "/etc/bind/zones/db.<REVERSE_FILE_2>";
};
EOF
# Create zone directory
mkdir -p /etc/bind/zones
# Create forward zone file
cat > /etc/bind/zones/db.<DOMAIN> << EOF
\$TTL    604800
@       IN      SOA     ns1.<DOMAIN>. admin.<DOMAIN>. (
                  1     ; Serial
             604800     ; Refresh
              86400     ; Retry
            2419200     ; Expire
             604800 )   ; Negative Cache TTL
;
@       IN      NS      ns1.<DOMAIN>.
ns1     IN      A       <GITLAB_IP>

; Specific entry for kube.<DOMAIN>
kube IN      A       <MASTER1_IP>
kube IN      A       <MASTER2_IP>
kube IN      A       <MASTER3_IP>

; Wildcard for kube subdomain pointing to all masters
*.kube IN      A       <MASTER1_IP>
*.kube IN      A       <MASTER2_IP>
*.kube IN      A       <MASTER3_IP>

; Kubernetes masters
master1 IN      A       <MASTER1_IP>
master2 IN      A       <MASTER2_IP>
master3 IN      A       <MASTER3_IP>

; GitLab server
gitlab  IN      A       <GITLAB_IP>
EOF

# Create reverse zone files
cat > /etc/bind/zones/db.<REVERSE_FILE_1> << EOF
\$TTL    604800
@       IN      SOA     ns1.<DOMAIN>. admin.<DOMAIN>. (
                  1     ; Serial
             604800     ; Refresh
              86400     ; Retry
            2419200     ; Expire
             604800 )   ; Negative Cache TTL
;
@       IN      NS      ns1.<DOMAIN>.

; PTR Records
<GITLAB_IP_LAST_OCTET>     IN      PTR     gitlab.<DOMAIN>.
<MASTER1_IP_LAST_OCTET>    IN      PTR     master1.<DOMAIN>.
<MASTER2_IP_LAST_OCTET>    IN      PTR     master2.<DOMAIN>.
<MASTER3_IP_LAST_OCTET>    IN      PTR     master3.<DOMAIN>.
EOF

cat > /etc/bind/zones/db.<REVERSE_FILE_2> << EOF
\$TTL    604800
@       IN      SOA     ns1.<DOMAIN>. admin.<DOMAIN>. (
                  1     ; Serial
             604800     ; Refresh
              86400     ; Retry
            2419200     ; Expire
             604800 )   ; Negative Cache TTL
;
@       IN      NS      ns1.<DOMAIN>.

; PTR Records for additional hosts if any
EOF

# Validate configuration
named-checkconf
named-checkzone <DOMAIN> /etc/bind/zones/db.<DOMAIN>
named-checkzone <REVERSE_ZONE_1> /etc/bind/zones/db.<REVERSE_FILE_1>
named-checkzone <REVERSE_ZONE_2> /etc/bind/zones/db.<REVERSE_FILE_2>

# Restart and enable BIND9
systemctl restart named
systemctl enable named
echo "DNS Server configured with domain <DOMAIN>"

# 11. Copy admin password generated by gitlab to /home/ubuntu
echo "Copying admin password to /home/<DEFAULT_USER>..."
ADMIN_PASSWORD=$(grep 'Password:' /etc/gitlab/initial_root_password | awk '{print $NF}')
echo "Admin password: $ADMIN_PASSWORD"
echo "Admin password: $ADMIN_PASSWORD" > /home/<DEFAULT_USER>/gitlab_admin_password.txt
chown <DEFAULT_USER>:<DEFAULT_USER> /home/<DEFAULT_USER>/gitlab_admin_password.txt

echo "================================================================"
echo "GitLab installation complete!"
echo "Access GitLab at https://gitlab.<DOMAIN>"
echo "DNS server configured for <DOMAIN> domain"
echo "Host configured to use local DNS server"
echo "================================================================"
